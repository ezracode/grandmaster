getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
getwd()
dir.create("testdir")
dir()
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
asdf
args(dir.create)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
dir8
dir()
file.remove("testdir")
getwd()
dir()
getwd()
ls()
dir()
dir()
getwd()
setwd("C:/Users/esalazar/Documents")
setwd("C:/Users/esalazar/Documents")
dir()
dir()
dir()
getwd()
mayorque <- function(x){ }
mayorque <- function(x){ res <- x < 10
x[res] }
mayorque(1:20)
mayorque <- function(x){ res <- x < 10
print (rest)
x[res]}
mayorque(1:20)
mayorque <- function(x){ res <- x < 10
print(res)
x[res]}
mayorque(1:20)
gplot(1:20,  aes(x = factor(""), fill = workshop) ) +
geom_bar()
library(datasets)
data(iris)
getwd()
?iris
colnames(iris)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris, 2, mean)
rowMeans(iris[, 1:4])
colMeans(iris)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
apply(mtcars, 2, mean)
split(mtcars, mtcars$cyl)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
dir()
getwd()
#setwd("C:/Users/esalazar/Documents/Proyectos R/Programming R/swirl")
dir()
library(swirl)
swirl()
cmat
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, xy)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols!, pch = 8, cex = 2, lwd = 2)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex=2, lwd=2)
kmean(dataFrame, 3)
kmeans(dataFrame, 3)
kmObj$iter
points(x, y, col = kmObj$cluster, pch = 19, cex=2, lwd=2)
plot(x, y, col = kmObj$cluster, pch = 19, cex=2, lwd=2)
plot(x, y, col = kmObj$cluster, pch = 19, cex=2)
points(kmObj$centers, col = c("black", "red", "gree"), pch = 2, cex = 2, lwd = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 2, cex = 2, lwd = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, kmeans(dataFrame, 6)$cluster, pch =19, cex =2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch =19, cex =2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch =19, cex =2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch =19, cex =2)
swirl()
swirl()
swirl()
swirl()
swirl()
cmat
points(cx, cy, col = c("red", "orange", "purple"), pck = 3, cdx = 2, lwd = 2)
points(cx, cy, col = c("red", "orange", "purple"), pck = 3, cex = 2, lwd = 2)
points(cx, cy, col = c("red", "orange", "purple"), pchisq() = 3, cex = 2, lwd = 2)
points(cx, cy, col = c("red", "orange", "purple"), pch() = 3, cex = 2, lwd = 2)
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x,y,pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx,newCy,cols = cols1, pch=8, cex=2, lwd = 2)
points(newCx,newCy,col = cols1, pch=8, cex=2, lwd = 2)
mdist(x,y,newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y,col = cols1[newClust2], pch=18, cex=2)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2])
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame, 3)
kmObj$iter
plot(x,y,col=kmObj$cluster, pch = 19, cex=2)
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch = 19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch = 19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch = 19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap (dataMatrix)
mat
svd(mat)
matu %*% diag
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
vd1$v[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2
svd2$d
dim(faceData)
a1 <- (svd1$u[,1] * svd1$d[1])%*%t(svd1$v[,1])
myImage(svd1$u[,1])
myImage(a1)
a1 <- svd1$u[,1] %*% svd1$u[,1] %*% svd1$d[1] %*% svd1$d[2] %*%t svd1$v[,1] %*%t svd1$v[,2]
a2 <- svd1$u[,1] %*% svd1$u[,2] %*% svd1$d[1] %*% svd1$d[2] %*% t(svd1$v[,1]) %*% t(svd1$v[,2])
a2 <- svd1$u[,1] %*% svd1$u[,2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1]) %*% t(svd1$v[,2])
a2 <- svd1$u[1:21] %*% diag(svd1$d[1:2]) %*% t(svd1$v[1:2])
a2 <- svd1$u[1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[1:2])
svd1$u[1:2]
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject)))
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject = 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1, 12)
names(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(c(1:6))
mdist <- dist(sub1, x[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclusteringj, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$u)
maxCon <- which.max(svd1$u[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,~2, 6)
kClust <- kmeans(sub1[,~2], 6)
kClust <- kmeans(sub1[,~], 6)
kClust <- kmeans(sub1[,~78], 6)
View(sub1)
View(sub1)
kClust <- kmeans(sub1[,-c(562,563), centers = 6)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$act)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, mstart=100)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[, 1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
a <- "e4"
a
a + 1
length(a)
nchar(a)
a[2]
a[1]
a[1][1]
substr(a, nchar(a))
substr(a, nchar(a), 1)
substr(a, nchar(a)-1, 1)
substr(a, nchar(a), 1)
substr(a, nchar(a), 1)
substr(a, nchar(a)-1, 1)
substr(a, nchar(a)-2, 1)
substr(a,2, 1)
substr(a, 1, 1)
substr(a, 1, 2)
substr(a, 2, 2)
substr(a, 2, 1)
substr(a, 0, 1)
substr(a, 1, 1)
substr(a, 2, 1)
substr(a, 3, 1)
substr("abcdef", 2, 4)
substr("e4", 2, 1)
substr("e4", 1, 1)
substr("e4", 0, 1)
substr("e4", 1, 1)
substr("e4", 2, 1)
substr("e4", 2, 2)
substr("e4", 2, 3)
substr("e4", 2, 1)
substr("e4", 2, 0)
substr("hola", 2, 1)
substr("hola", 2, 2)
substr("hola", 2, 3)
substr("hola", 2, 4)
substr("e4", 1, 1)
substr("e4", 2, 1)
substr("e4", 1, 2)
a
substr("e4", 1, 1)
substr("e4", 1, 2)
substr("e4", 2, 2)
substr("e4", 2, 1)
substr(a, nchar(a), 1)
substr(a, nchar(a)+1, 1)
substr(a, nchar(a), 2)
substr(a, nchar(a), 3)
substr(a, nchar(a), 4)
substr(a, nchar(a), 5)
substr(a, nchar(a), 2)
substr(a, start = nchar(a), stop = 2)
substr("abcdef", 2, 4)
substr(a, start = nchar(a), stop = nchar(a))
substr(a, start = nchar(a), stop = nchar(a)) - 1
strtoi(substr(a, start = nchar(a), stop = nchar(a)))
"4" + 1
"4" & 1
paste("4", 1)
b = strtoi(substr(a, start = nchar(a), stop = nchar(a)))
tostring(b)
toString(b)
b = strtoi(substr(a, start = nchar(a), stop = nchar(a)))
b+1
substr(a, nchar(a), nchar(a))
substr(a, nchar(a) - 1, nchar(a))
substr(a, nchar(a) - 1, nchar(a) - 1)
substr(a, nchar(a), nchar(a))
substr(a, nchar(a) - 1, nchar(a) - 1)
substr(a, nchar(a) - 1, nchar(a) - 1)
match(1, c(1,2,3,4))
match(50, c(1,2,3,4))
move = "e4"
rank = substr(move, nchar(move) - 1, nchar(move) - 1)
file = substr(move, nchar(move), nchar(move))
move = "exd5"
rank = substr(move, nchar(move) - 1, nchar(move) - 1)
file = substr(move, nchar(move), nchar(move))
nchar(move)
nchar(move) - 1
previous-rank = substr(move, 1, 1)
previous.rank = substr(move, 1, 1)
dir()
setwd("Esdras Salazar")
dir()
setwd(Proyectos)
dir
dir()
setwd("Proyectos")
dir()
setwd("grandmaster")
dir()
source("mapgame.R")
source("mapgame.R")
source("mapgame.R")
source("mapgame.R")
source("mapgame.R")
source("mapgame.R")
source("mapgame.R")
moves = "1. e4 e5 2. d4 d5"
w <- myBoard(moves)
w <- myBoard(moves)
unlist(strsplit(moves))
unlist(strsplit(moves))
unlist(strsplit(moves, " "))
w <- myBoard(moves)
source("mapgame.R")
moves = "1. e4 e5 2. d4 d5"
w <- myBoard(moves)
w <- myBoard(moves)
(1<= 2)
strtoi("00")
source("mapgame.R")
w <- myBoard(moves)
View(myBoard)
source("mapgame.R")
w <- myBoard(moves)
source("mapgame.R")
w <- myBoard(moves)
paste("a", "b")
source("mapgame.R")
w <- myBoard(moves)
View(w)
View(w)
warnings()
source("mapgame.R")
w <- myBoard(moves)
warnings()
source("mapgame.R")
w <- myBoard(moves)
source("mapgame.R")
w <- myBoard(moves)
source("mapgame.R")
w <- myBoard(moves)
warnings()
View(w)
View(w)
source("mapgame.R")
w <- myBoard(moves)
source("mapgame.R")
w <- myBoard(moves)
source("mapgame.R")
w <- myBoard(moves)
source("mapgame.R")
w <- myBoard(moves)
warnings
warnings()
View(w)
View(w)
source("mapgame.R")
w <- myBoard(moves)
source("mapgame.R")
w <- myBoard(moves)
warnings()
source("mapgame.R")
w <- myBoard(moves)
warnings()
board = list (
a8 = "41", b8 = "42", c8 = "43", d8 = "44", e8 = "45", f8 = "46", g8 = "47", h8 = "48",
a7 = "31", b7 = "32", c7 = "33", d7 = "34", e7 = "35", f7 = "36", g7 = "37", h7 = "38",
a6 = "00", b6 = "00", c6 = "00", d6 = "00", e6 = "00", f6 = "00", g6 = "00", h6 = "00",
a5 = "00", b5 = "00", c5 = "00", d5 = "00", e5 = "00", f5 = "00", g5 = "00", h5 = "00",
a4 = "00", b4 = "00", c4 = "00", d4 = "00", e4 = "00", f4 = "00", g4 = "00", h4 = "00",
a3 = "00", b3 = "00", c3 = "00", d3 = "00", e3 = "00", f3 = "00", g3 = "00", h3 = "00",
a2 = "21", b2 = "22", c2 = "23", d2 = "24", e2 = "25", f2 = "26", g2 = "27", h2 = "28",
a1 = "11", b1 = "12", c1 = "13", d1 = "14", e1 = "15", f1 = "16", g1 = "17", h1 = "18"
)
board["a1"]
board["a1"][1]
board[$a1]
board$a1
board$"a1"
board$["a1"]
board$"a1"
move = "a1"
board$move
board$"move"
board$move
board[["a1"]]
board$["a1"]
board["a1"]
w <- myBoard(moves)
source("mapgame.R")
w <- myBoard(moves)
warnings()
moves
View(board)
View(board)
View(w)
View(w)
class(board)
class(board[["a1"]])
board[["a1"]] = "holi"
View(board)
View(board)
board[["a1"]] <-  "holi"
View(board)
board[["a1"]]
View(board)
View(board)
moves
for (move in moves) print(move)
for (move in moves) print(move)
movessplit <- split(moves, " ")
for (move in movessplit) print(move)
movessplit
movessplit <- split(unlist(moves), " ")
movessplit
movessplit <- unlist(split(moves, " "))
movessplit
movessplit <- unlist(split(moves, " "))
movessplit
movessplit <- split(moves, " ")
movessplit
movessplit <- unlist(strsplit(moves, " "))
movessplit
for (move in movessplit) print(move)
source("mapgame.R")
w <- myBoard(moves)
warnings()
sapply(w, class})
sapply(w, class)
?rbind
source("mapgame.R")
w <- myBoard(moves)
View(w)
View(w)
source("mapgame.R")
w <- myBoard(moves)
View(w)
View(w)
source("mapgame.R")
w <- myBoard(moves)
View(w)
View(w)
