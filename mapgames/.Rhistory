library("XML")
install.packages("xml")
install.packages("XML")
library("XML")
result <- xmlParse(file = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
result <- xmlParse(file = "C:/Users/esalazar/Downloads/getdata%2Fdata%2Frestaurants.xml")
print(result)
getNodeSet(result, "/zipcode")
doc = xmlInternalTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
result <- xmlInternalTreeParse("C:/Users/esalazar/Downloads/getdata%2Fdata%2Frestaurants.xml")
src = xpathApply(doc, xmlGetAttr, "href")
src = xpathApply(result, xmlGetAttr, "href")
result <- xmlParse(file = "C:/Users/esalazar/Downloads/getdata%2Fdata%2Frestaurants.xml")
top = xmlRoot(result)
xmlName(top)
names (top [[1]])
names (top [[1]])
names (top [[1]] [[zipcode]])
names (top [[1]] [["zipcode"]])
zipcodes = top [[1]] [["zipcode"]]
names (zipcodes)
name (zipcodes)
names (zipcodes)
xmlSApply(zipcodes[[1]], xmlValue)
xmlName(top)
names (top [[1]])
names (top [[1]])
names (top [[1]] [[1]])
zipcodes = top [[1]] [[1]] [["zipcode"]]
names(zipcodes)
names(zipcodes [[1]])
names(zipcodes [[1]] [[1]])
names(zipcodes [[1]])
zipcodes = top [[1]] [[1]]
names (zipcoees)
names (zipcodes)
names (zipcoees[[1]])
names (zipcodes[[1]])
print(zipcodes)
zipcodes = top [[1]]
print(zipcodes)
names (zipcodes[[1]])
zipcodes = top [[1]]
names (zipcodes)
names (zipcodes[[11]])
names (zipcodes[[1]])
names (zipcodes[[1]] [["zipcode"]])
names (zipcodes[[11]] [["zipcode"]])
zipcodes[[11]] [["zipcode"]]
zipcodes[[11]] [["zipcode"]]
zipcodes[[11]] [["zipcode"]]
zipcodes[[1]] [["zipcode"]]
xmlApply(zipcodes, xmlvalue)
xmlApply(zipcodes, xmlValue)
xmlValue(zipcodes[["zipcode"]])
xmlValue(zipcodes[[1]] [["zipcode"]])
xmlValue(zipcodes[[2]] [["zipcode"]])
xmlValue(zipcodes[[3]] [["zipcode"]])
xmlApply(zipcodes[[1]], xmlValue)
xmlApply(zipcodes, xmlValue)
xmlApply(zipcodes[["zipcode"]], xmlValue)
xmlApply(zipcodes, xmlValue)
?xmlApply
xmlApply(zipcodes, zipcode)
xmlApply(zipcodes, xmlAttrs)
xmlApply(zipcodes, xmlNode)
xmlApply(zipcodes, xmlValue == 1)
xmlApply(zipcodes, xmlValue)
xmlApply(zipcodes, xmlValue)
xmlSApply(art, function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes[[1]], function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes[[2]], function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes[[200]], function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue == 21231))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue == "21231"))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue[["zipcode"]]== 21231))
xmlSApply(zipcodes, function(x) xmlSApply(x, xmlValue[["zipcode"]]))
xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]], xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]] == "21231", xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]], xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]], xmlValue))
xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]], xmlValue) == 21231)
xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]], xmlValue) == "21231")
datos <- xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]], xmlValue) == "21231")
print(datos)
filter (datos, row.text == TRUE)
datos <- xmlSApply(zipcodes, function(x) xmlSApply(x[["zipcode"]], xmlValue))
print(datos)
filter (datos, row.text == "21231")
filter (datos, "21231")
datos("21231")
print(datos)
datos('21231')
datos(c('21231'))
filter (datos, c("21231")
)}}
filter (datos, c("21231"))
datos
match (c("21231"), datos)
match (c("21231"), datos)
match (c("21231"), datos)
match (c("21231"), datos)
c("21231"), datos
c("21231")== datos
as.data.frame(table(datos))
?as.data.frame
valores = fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
mean(valores$pwgtp15,by=valores$SEX)
mean(valores$pwgtp15,by=valores$SEX)
rowMeans(valores)[valores$SEX==1]; rowMeans(valores)[valores$SEX==2]
clear
DT = fread("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
mean(DT$pwgtp15,by=DT$SEX)
tapply(DT$pwgtp15,DT$SEX,mean)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
sapply(split(DT$pwgtp15,DT$SEX),mean)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
DT[,mean(pwgtp15),by=SEX]
owMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(tapply(DT$pwgtp15,DT$SEX,mean)
)
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
swirl()
pwd
getwd()
?library
?nrow
?set.seed
?seq_len()
getwd()
head(consulta)
source("armarModelo.R")
rm(datosx)
rm(DT)
rm(datos)
rm(result)
rm(misDatos)
rm(valores)
rm
rm()
rm(top)
rm(zipcodes)
dir()
y <- "double quote: \", tab: \t, newline: \n, unicode point: \u20AC"
y
y <- "double quote: ", tab: \t, newline: \n, unicode point: \u20AC"
y <- "double quote: \\", tab: \t, newline: \n, unicode point: \u20AC"
y <- "double quote: \", tab: \t, newline: \n, unicode point: \u20AC"
y
paste("""", "hola", """")
paste("", "hola", "")
paste("\"", "hola", "\"")
gsub(" ", "", paste("\"", "hola", "\""))
substr("abcdef", 2, 4)
substr("abcdef", 1, 1)
nchar("hola")
t <. "hola"
t <- "hola"
nchar(t)
regexpr('.', "hola.quetal")
regexpr('.', "hola.quetal")
regexpr('a', "hola.quetal")
grep('a', "hola.quetal")
grep('a', "hola.quetal")
grep('.', "hola.quetal")
gregexpr(pattern ='2',"the2quickbrownfoxeswere2tired")
w<-gregexpr(pattern ='2',"the2quickbrownfoxeswere2tired")
w
View(w)
View(w)
w<-gregexpr(pa3ern ='3',"the3quickbrownfoxeswere2tired")
w<-gregexpr(pa3ern ='3',"the3quickbrownfoxeswere2tired")
w<-gregexpr(pattern ='3',"the3quickbrownfoxeswere2tired")
w
w[1]
instr('.', "hola.quetal")
grep("bcd", "abcd")
grep(".", "hola como estas. yo que")
regrep(".", "hola como estas. yo que")
regexpr(".", "hola como estas. yo que")
grep("A", "BACBAC", fixed=TRUE)
library(swirl)
swirl()
x
y <- x - 3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
getwd()
dir.create("testdir")
dir()
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
asdf
args(dir.create)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(old.dir)
dir8
dir()
file.remove("testdir")
getwd()
dir()
getwd()
ls()
dir()
dir()
getwd()
setwd("C:/Users/esalazar/Documents")
setwd("C:/Users/esalazar/Documents")
dir()
dir()
dir()
getwd()
mayorque <- function(x){ }
mayorque <- function(x){ res <- x < 10
x[res] }
mayorque(1:20)
mayorque <- function(x){ res <- x < 10
print (rest)
x[res]}
mayorque(1:20)
mayorque <- function(x){ res <- x < 10
print(res)
x[res]}
mayorque(1:20)
gplot(1:20,  aes(x = factor(""), fill = workshop) ) +
geom_bar()
library(datasets)
data(iris)
getwd()
?iris
colnames(iris)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris, 2, mean)
rowMeans(iris[, 1:4])
colMeans(iris)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
apply(mtcars, 2, mean)
split(mtcars, mtcars$cyl)
sapply(mtcars, cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
dir()
getwd()
#setwd("C:/Users/esalazar/Documents/Proyectos R/Programming R/swirl")
dir()
library(swirl)
swirl()
cmat
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, xy)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols!, pch = 8, cex = 2, lwd = 2)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex=2, lwd=2)
kmean(dataFrame, 3)
kmeans(dataFrame, 3)
kmObj$iter
points(x, y, col = kmObj$cluster, pch = 19, cex=2, lwd=2)
plot(x, y, col = kmObj$cluster, pch = 19, cex=2, lwd=2)
plot(x, y, col = kmObj$cluster, pch = 19, cex=2)
points(kmObj$centers, col = c("black", "red", "gree"), pch = 2, cex = 2, lwd = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 2, cex = 2, lwd = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, kmeans(dataFrame, 6)$cluster, pch =19, cex =2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch =19, cex =2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch =19, cex =2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch =19, cex =2)
swirl()
swirl()
swirl()
swirl()
swirl()
cmat
points(cx, cy, col = c("red", "orange", "purple"), pck = 3, cdx = 2, lwd = 2)
points(cx, cy, col = c("red", "orange", "purple"), pck = 3, cex = 2, lwd = 2)
points(cx, cy, col = c("red", "orange", "purple"), pchisq() = 3, cex = 2, lwd = 2)
points(cx, cy, col = c("red", "orange", "purple"), pch() = 3, cex = 2, lwd = 2)
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x,y,pch=19, cex=2, col=cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx,newCy,cols = cols1, pch=8, cex=2, lwd = 2)
points(newCx,newCy,col = cols1, pch=8, cex=2, lwd = 2)
mdist(x,y,newCx, newCy)
apply(distTmp2, 2, which.min)
points(x,y,col = cols1[newClust2], pch=18, cex=2)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2])
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame, 3)
kmObj$iter
plot(x,y,col=kmObj$cluster, pch = 19, cex=2)
points(kmObj$centers, col=c("black", "red", "green"), pch=3, cex=3, lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch = 19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch = 19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch = 19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local=TRUE)
heatmap (dataMatrix)
mat
svd(mat)
matu %*% diag
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
vd1$v[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2
svd2$v[,1:2]
svd2
svd2$d
dim(faceData)
a1 <- (svd1$u[,1] * svd1$d[1])%*%t(svd1$v[,1])
myImage(svd1$u[,1])
myImage(a1)
a1 <- svd1$u[,1] %*% svd1$u[,1] %*% svd1$d[1] %*% svd1$d[2] %*%t svd1$v[,1] %*%t svd1$v[,2]
a2 <- svd1$u[,1] %*% svd1$u[,2] %*% svd1$d[1] %*% svd1$d[2] %*% t(svd1$v[,1]) %*% t(svd1$v[,2])
a2 <- svd1$u[,1] %*% svd1$u[,2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1]) %*% t(svd1$v[,2])
a2 <- svd1$u[1:21] %*% diag(svd1$d[1:2]) %*% t(svd1$v[1:2])
a2 <- svd1$u[1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[1:2])
svd1$u[1:2]
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
a5 <- svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
dim(ssd)
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject)))
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject = 1)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1, 12)
names(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(c(1:6))
mdist <- dist(sub1, x[,1:3])
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclusteringj, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$u)
maxCon <- which.max(svd1$u[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,10:12])
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans(sub1[,~2, 6)
kClust <- kmeans(sub1[,~2], 6)
kClust <- kmeans(sub1[,~], 6)
kClust <- kmeans(sub1[,~78], 6)
View(sub1)
View(sub1)
kClust <- kmeans(sub1[,-c(562,563), centers = 6)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$act)
table(kClust$cluster, sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, mstart=100)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart=100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[, 1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
?mean
?plot
require(stats)
plot(cars)
?plot
lines(lowess(cars))
dir()
setwd("C:\Users\esalazar\Documents\Esdras Salazar\Proyectos\grandmaster\mapgames")
setwd("C:/Users/esalazar/Documents/Esdras Salazar/Proyectos/grandmaster/mapgames")
dir
dir()
source("test.R")
View(newboard)
View(newboard)
View(equipos)
View(equipos)
View(row)
View(row)
View(newboard)
View(newboard)
View(piezas)
View(piezas)
View(row)
View(row)
source("games.R")
source("games.R")
View(w)
View(w)
